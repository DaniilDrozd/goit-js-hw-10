{"mappings":"YAAA,IAAMA,EAAW,gCCEXC,EAAcC,SAASC,cAAc,iBACrCC,EAAUF,SAASC,cAAc,aACjCE,EAASH,SAASC,cAAc,WAGpCG,MAAM,kCACHC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,0BAElB,OAAOF,EAASG,M,IAEjBJ,MAAK,SAAAK,GACJ,IAAMC,EAAoBX,SAASY,cAAc,UACjDD,EAAkBE,MAAQ,GAC1BF,EAAkBG,YAAc,eAChCf,EAAYgB,YAAYJ,GAExBD,EAAKM,SAAQ,SAAAC,GACX,IAAMC,EAASlB,SAASY,cAAc,UACtCM,EAAOJ,YAAcG,EAAME,KAC3BD,EAAOE,YAAc,eACrBrB,EAAYgB,YAAYG,E,OAG3BG,OAAM,SAAAC,GACLC,QAAQC,IAAIF,E,IAMlBvB,EAAY0B,iBAAiB,UAAU,WACrCtB,EAAOuB,UAAUC,OAAO,aACxBC,WAEA,ID1B6BC,EC0BvBhB,EAAQd,EAAY+B,QAAQ/B,EAAYgC,eAAelB,MAChDd,EAAY+B,QAAQ/B,EAAYgC,eAAeC,MD3B/BH,EC6BbhB,ED5BhBT,MACE,GAAuC6B,OAApCnC,EAAS,6BAA8CmC,OAAnBJ,EAAQ,aAAmBI,OAZpE,wEAYoE,oBAClE5B,MAAK,SAAA6B,GACL,IAAKA,EAAO3B,GACV,MAAM,IAAIC,MAAM0B,EAAOC,QAGzB,OAAOD,EAAOzB,M,KCsBbJ,MAAK,SAAU+B,GAYpB,IAC0BC,EAAhBC,EACFC,EAbFpC,EAAOuB,UAAUc,IAAI,aAYDH,EAXVD,EAWe,GAArBE,EAAgBD,EAAhBC,IACFC,EADkBF,EAAXI,OACSC,QAAO,SAACH,EAAQtB,GACpC,MAAO,iCAAqDgB,OAApBhB,EAAME,KAAK,WAEhBc,OAFyBK,EAAI,wFAGvBL,OADNhB,EAAME,KAAK,sDAELc,OADAhB,EAAM0B,YAAY,qDACAV,OAAlBhB,EAAM2B,YAAY,2B,GAE1D,IACH1C,EAAQ2C,UAAYN,EACpBpC,EAAO2C,MAAMC,QAAU,M,IAnBpB1B,OAAM,WACLlB,EAAOuB,UAAUc,IAAI,aACrBQ,SAASC,OAAOC,QACd,mD","sources":["src/js/cat-api.js","src/js/index.js"],"sourcesContent":["const BASE_URL = 'https://api.thecatapi.com/v1/';\nconst API_KEY =\n  'live_gQ9d6291XE7YOO6cVkJSOajXrnsBkKtbEtDhuAYPvUIQwhBSvevy0efyFS2cix4J';\n\nexport const fetchBreeds = () =>\n  fetch(`${BASE_URL}/breeds`).then(res => {\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    return res.json();\n  });\n\nexport const fetchCatByBreed = breedId =>\n  fetch(\n    `${BASE_URL}/images/search?breed_ids=${breedId}&api_key=${API_KEY}&has_breeds=1, `\n  ).then(result => {\n    if (!result.ok) {\n      throw new Error(result.status);\n    }\n\n    return result.json();\n  });\n","import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst breedSelect = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst loader = document.querySelector('.loader');\n\nfunction fetchBreedsFromApi() {\n  fetch('https://api.example.com/breeds')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch breeds');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const placeholderOption = document.createElement('option');\n      placeholderOption.value = '';\n      placeholderOption.textContent = 'select a cat';\n      breedSelect.appendChild(placeholderOption);\n\n      data.forEach(breed => {\n        const option = document.createElement('option');\n        option.textContent = breed.name;\n        option.placeholder = 'Select breed';\n        breedSelect.appendChild(option);\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nfetchBreedsFromApi();\n\nbreedSelect.addEventListener('change', function () {\n  loader.classList.remove('invisible');\n  clearCat();\n\n  const value = breedSelect.options[breedSelect.selectedIndex].value;\n  const name = breedSelect.options[breedSelect.selectedIndex].text;\n\n  fetchCatByBreed(value)\n    .then(function (catData) {\n      loader.classList.add('invisible');\n      createCat(catData, name);\n    })\n    .catch(function () {\n      loader.classList.add('invisible');\n      Notiflix.Notify.failure(\n        'Oops! An error occurred! Try reloading the page!'\n      );\n    });\n});\n\nfunction createCat(cats, title) {\n  const { url, breeds } = cats[0];\n  const markup = breeds.reduce((markup, breed) => {\n    return `<img class=\"breed-image\" alt=\"${breed.name}\" src=\"${url}\">\n            <div class=\"breed-container\">\n              <h2 class=\"breed-name\">${breed.name}</h2>\n              <p class=\"breed-temperament\">${breed.temperament}</p>\n              <p class=\"breed-description\">${breed.description}</p>\n            </div>`;\n  }, '');\n  catInfo.innerHTML = markup;\n  loader.style.display = 'none';\n}\n"],"names":["$8994e83c1b13b9e2$var$BASE_URL","$44ae6d9db4eaca0f$var$breedSelect","document","querySelector","$44ae6d9db4eaca0f$var$catInfo","$44ae6d9db4eaca0f$var$loader","fetch","then","response","ok","Error","json","data","placeholderOption","createElement","value","textContent","appendChild","forEach","breed","option","name","placeholder","catch","error","console","log","addEventListener","classList","remove","clearCat","breedId","options","selectedIndex","text","concat","result","status","catData","ref","url","markup","add","breeds","reduce","temperament","description","innerHTML","style","display","Notiflix","Notify","failure"],"version":3,"file":"index.e1b8847b.js.map"}