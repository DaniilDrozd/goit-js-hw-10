{"mappings":"AAAA,MCEMA,EAAcC,SAASC,cAAc,iBACrCC,EAAUF,SAASC,cAAc,aACjCE,EAASH,SAASC,cAAc,WAGpCG,MAAM,kCACHC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,0BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,IACJ,MAAMC,EAAoBX,SAASY,cAAc,UACjDD,EAAkBE,MAAQ,GAC1BF,EAAkBG,YAAc,eAChCf,EAAYgB,YAAYJ,GAExBD,EAAKM,SAAQC,IACX,MAAMC,EAASlB,SAASY,cAAc,UACtCM,EAAOJ,YAAcG,EAAME,KAC3BD,EAAOE,YAAc,eACrBrB,EAAYgB,YAAYG,EAAO,GAC/B,IAEHG,OAAMC,IACLC,QAAQC,IAAIF,EAAM,IAMxBvB,EAAY0B,iBAAiB,UAAU,WACrCtB,EAAOuB,UAAUC,OAAO,aACxBC,WAEA,MAAMf,EAAQd,EAAY8B,QAAQ9B,EAAY+B,eAAejB,MAChDd,EAAY8B,QAAQ9B,EAAY+B,eAAeC,KD3B/B,IAAAC,KC6BbnB,ED5BhBT,MACE,yDAAuC4B,kGACvC3B,MAAK4B,IACL,IAAKA,EAAO1B,GACV,MAAM,IAAIC,MAAMyB,EAAOC,QAGzB,OAAOD,EAAOxB,MAAM,KCsBnBJ,MAAK,SAAU8B,GACdhC,EAAOuB,UAAUU,IAAI,aAW3B,SAAmBC,EAAMC,GACvB,MAAMC,IAAEA,EAAGC,OAAEA,GAAWH,EAAK,GACvBI,EAASD,EAAOE,QAAO,CAACD,EAAQxB,IAC7B,iCAAiCA,EAAME,cAAcoB,wFAEzBtB,EAAME,yDACAF,EAAM0B,+DACN1B,EAAM2B,uCAE9C,IACH1C,EAAQ2C,UAAYJ,EACpBtC,EAAO2C,MAAMC,QAAU,M,CArBnBC,CAAUb,E,IAEXd,OAAM,WACLlB,EAAOuB,UAAUU,IAAI,aACrBa,SAASC,OAAOC,QACd,mD","sources":["src/js/cat-api.js","src/js/index.js"],"sourcesContent":["const BASE_URL = 'https://api.thecatapi.com/v1/';\nconst API_KEY =\n  'live_gQ9d6291XE7YOO6cVkJSOajXrnsBkKtbEtDhuAYPvUIQwhBSvevy0efyFS2cix4J';\n\nexport const fetchBreeds = () =>\n  fetch(`${BASE_URL}/breeds`).then(res => {\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    return res.json();\n  });\n\nexport const fetchCatByBreed = breedId =>\n  fetch(\n    `${BASE_URL}/images/search?breed_ids=${breedId}&api_key=${API_KEY}&has_breeds=1, `\n  ).then(result => {\n    if (!result.ok) {\n      throw new Error(result.status);\n    }\n\n    return result.json();\n  });\n","import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst breedSelect = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst loader = document.querySelector('.loader');\n\nfunction fetchBreedsFromApi() {\n  fetch('https://api.example.com/breeds')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch breeds');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const placeholderOption = document.createElement('option');\n      placeholderOption.value = '';\n      placeholderOption.textContent = 'select a cat';\n      breedSelect.appendChild(placeholderOption);\n\n      data.forEach(breed => {\n        const option = document.createElement('option');\n        option.textContent = breed.name;\n        option.placeholder = 'Select breed';\n        breedSelect.appendChild(option);\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nfetchBreedsFromApi();\n\nbreedSelect.addEventListener('change', function () {\n  loader.classList.remove('invisible');\n  clearCat();\n\n  const value = breedSelect.options[breedSelect.selectedIndex].value;\n  const name = breedSelect.options[breedSelect.selectedIndex].text;\n\n  fetchCatByBreed(value)\n    .then(function (catData) {\n      loader.classList.add('invisible');\n      createCat(catData, name);\n    })\n    .catch(function () {\n      loader.classList.add('invisible');\n      Notiflix.Notify.failure(\n        'Oops! An error occurred! Try reloading the page!'\n      );\n    });\n});\n\nfunction createCat(cats, title) {\n  const { url, breeds } = cats[0];\n  const markup = breeds.reduce((markup, breed) => {\n    return `<img class=\"breed-image\" alt=\"${breed.name}\" src=\"${url}\">\n            <div class=\"breed-container\">\n              <h2 class=\"breed-name\">${breed.name}</h2>\n              <p class=\"breed-temperament\">${breed.temperament}</p>\n              <p class=\"breed-description\">${breed.description}</p>\n            </div>`;\n  }, '');\n  catInfo.innerHTML = markup;\n  loader.style.display = 'none';\n}\n"],"names":["$85a5f86b715fe7db$var$breedSelect","document","querySelector","$85a5f86b715fe7db$var$catInfo","$85a5f86b715fe7db$var$loader","fetch","then","response","ok","Error","json","data","placeholderOption","createElement","value","textContent","appendChild","forEach","breed","option","name","placeholder","catch","error","console","log","addEventListener","classList","remove","clearCat","options","selectedIndex","text","breedId","result","status","catData","add","cats","title","url","breeds","markup","reduce","temperament","description","innerHTML","style","display","$85a5f86b715fe7db$var$createCat","Notiflix","Notify","failure"],"version":3,"file":"index.c059ffc0.js.map"}